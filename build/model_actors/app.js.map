{"version":3,"sources":["../../src/model_actors/app.js"],"names":[],"mappings":"AAAA,MAAM,UAAU,QAAQ,SAAR,CAAhB;AACA,MAAM,SAAS,QAAQ,QAAR,CAAf;AACA,MAAM,eAAe,IAAI,OAAO,YAAX,EAArB;AACA,IAAI,cAAc,QAAQ,sBAAR,CAAlB;;AAEA,MAAM,MAAM,UAAS,QAAT,EAAmB;AAC3B,QAAI,cAAc,OAAO,MAAP,CAAc,YAAd,CAAlB;AACA,QAAI,MAAJ;;;;;;;;;;AAUA,gBAAY,IAAZ,GAAmB,SAAS,IAAT,CAAc,MAAd,EAAsB;;AAErC,iBAAS,QAAQ,MAAR,CAAe;AACpB,mBAAO,OAAO;AADM,SAAf,CAAT;;;AAKA,oBAAY,MAAZ,GAAqB,MAArB;;;AAGA,YAAI,OAAO,UAAX,EAAuB;AACnB,mBAAO,GAAP,CAAW,CAAC,QAAD,EAAW,GAAX,EAAgB,KAAhB,CAAX,EAAmC,UAAS,EAAT,EAAa,GAAb,EAAkB;AACjD,uBAAO,QAAQ,IAAR,CAAa,CAAb,CAAP;AACH,aAFD;AAGH;;AAED,eAAO;AACH;AADG,SAAP;AAGH,KAnBD;;;;;;;AA0BA,gBAAY,OAAZ,GAAsB,SAAS,OAAT,CAAiB,IAAjB,EAAuB;AACzC,iBAAS,IAAT,GAAgB,IAAhB;AACH,KAFD;;;;;;;AASA,gBAAY,KAAZ,GAAoB,SAAS,KAAT,CAAe,IAAf,EAAqB;AACvC,oBAAY,IAAZ,EAAkB,MAAlB;AACD,KAFD;;;;;;;AASA,gBAAY,MAAZ,GAAqB,SAAS,MAAT,CAAgB,IAAhB,EAAsB;AACvC,eAAO,MAAP,CAAc,IAAd;AACA,eAAO,MAAP;AACH,KAHD;;AAKA,WAAO,WAAP;AACH,CA9DD;;AAgEA,OAAO,OAAP,GAAiB,GAAjB","file":"app.js","sourcesContent":["const blessed = require('blessed');\nconst events = require('events');\nconst eventEmitter = new events.EventEmitter();\nvar clearScreen = require('../utils/clearScreen');\n\nconst App = function(AppState) {\n    let application = Object.create(eventEmitter);\n    let screen;\n\n    /**\n     * init - Initializes the application\n     *\n     * @param  {object} config A configuration object containing:\n     *   title - String: The title of the terminal\n     *   escapeQuit - Boolean: whether or not to allow a quit sequence to terminate the program\n     * @return {blessed}        a blessed instance\n     */\n    application.init = function init(config) {\n\n        screen = blessed.screen({\n            title: config.title\n        });\n\n        // TODO: Refactor?\n        application.screen = screen;\n\n        // Allow the user to quit the application with either Esc, q, or Ctrl + c\n        if (config.escapeQuit) {\n            screen.key(['escape', 'q', 'C-c'], function(ch, key) {\n                return process.exit(0);\n            });\n        }\n\n        return {\n            blessed\n        }\n    }\n\n    /**\n     * setPage - Updates the AppState's page property\n     *\n     * @param  {string} page The page value\n     */\n    application.setPage = function setPage(page) {\n        AppState.page = page;\n    };\n\n    /**\n     * clearScreen - Clears the scree\n     *\n     * @param  {blessed.Node} node The root node that comprises the page to be cleared\n     */\n    application.clear = function clear(node) {\n      clearScreen(node, screen);\n    };\n\n    /**\n     * render - Renders a page\n     \n     * @param  {blessed.Node} page A root node that comprises a page\n     */\n    application.render = function render(page) {\n        screen.append(page);\n        screen.render();\n    };\n\n    return application;\n}\n\nmodule.exports = App;\n"]}